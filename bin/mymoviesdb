#!/usr/bin/env ruby
# encoding: utf-8

require 'bundler/setup'
require 'slop'
require 'mymoviesdb'
require_relative 'scraper.rb'


opts = Slop.parse do |opt|
  opt.bool '-s', '--show', 'showing movies list'
  opt.separator "\tshow [option]:"
  opt.array '-m', '--method', 'add criterion, e.g. `method_name,field`', delimiter: ','
  opt.bool '-r', '--recomm', 'showing recommendation list unwathed movies'
  opt.bool '-rw', '--rwatch', 'showing recommendation list wathed movies'
  opt.string '-g', '--genre', 'showing only selected genres movie, e.g. `comedy?`'
  opt.separator ' '
  opt.bool '-u', '--update', 'updating movies list'
  opt.string '-p', '--path', 'set a file storage path', default: './data/movies.json'
  opt.on '-h', '--help' do
    puts opt
    exit
  end
end

list = MyMoviesDB::MoviesList.new(opts[:path]) unless opts[:update]

if opts[:update]
  Scraper.run(opts[:path])
end

if opts[:recomm]
  recommendation = list.get_recommendation
elsif
  recommendation = list.get_recommendation_watched
end

if opts[:genre]
  name_gen = "#{opts[:genre]}?".to_sym
  printed = recommendation.select { |v| v.send(name_gen) }
else
  printed = recommendation
end

if opts[:show]
  list.print if opts[:method].empty? && !(opts[:recomm] || opts[:rwatch])
  list.print_movie(printed) if opts[:recomm] || opts[:rwatch]

  if opts[:method]
    method, arg = opts[:method]
  end

  if method
    list.print_movie(list.send(method.to_sym, arg.to_sym))
  end
end
